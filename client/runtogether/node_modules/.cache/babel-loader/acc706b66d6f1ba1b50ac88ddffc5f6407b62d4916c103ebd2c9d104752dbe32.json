{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\RunTogether\\\\runtogether\\\\src\\\\CreateFeed\\\\HashTag.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './HashTag.css';\nimport styled from 'styled-components';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HashTag = () => {\n  _s();\n  const [color, setColor] = useState(false); // 스타일 컴포넌트에 props로 전달할 state\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        border: '1px solid blue',\n        backgroundColor: 'lightblue',\n        height: '40px',\n        width: '200px',\n        marginBottom: '50px'\n      },\n      onClick: function () {\n        setColor(!color);\n      },\n      children: \"\\uC0C9\\uC0C1 \\uBC14\\uAFB8\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Outer, {\n      children: [/*#__PURE__*/_jsxDEV(TestComponent, {\n        backColor: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), \" // \\uC0C9\\uC0C1\\uC0C1\\uC790 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0 backColor\\uB77C\\uB294 props \\uB9CC\\uB4E4\\uC5B4, \\uC5EC\\uAE30\\uC5D0 color state \\uB123\\uC5B4 \\uC804\\uB2EC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(HashTag, \"cLRYe1lhQgCtbRcoGUJWGyNDLMo=\");\n_c = HashTag;\nconst Outer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c2 = Outer;\nconst TestComponent = styled.div`\n  height: 100px;\n  width: 100px;\n  background-color: ${props => props.backColor ? 'blue' : 'red'};\n`; // 삼항연산자를 사용해 backColor의 값에 따라 blue / red 결정\n\n//   return (\n\n//     <div className=\"container\">\n//     {data.map((item, idx) => {\n//       return (\n//         <>\n//           <button\n//             value={idx}\n//             className={\"hashtag\" + (idx == btnActive ? \" active\" : \"\")}\n//             onClick={toggleActive}\n//           >\n//             {item - 1}\n//           </button>\n//         </>\n//       );\n//     })}\n//   </div>\n//   );\n// }\n_c3 = TestComponent;\nexport default HashTag;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HashTag\");\n$RefreshReg$(_c2, \"Outer\");\n$RefreshReg$(_c3, \"TestComponent\");","map":{"version":3,"names":["React","useState","styled","HashTag","color","setColor","border","backgroundColor","height","width","marginBottom","Outer","div","TestComponent","props","backColor"],"sources":["C:/Users/SSAFY/Desktop/RunTogether/runtogether/src/CreateFeed/HashTag.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './HashTag.css';\r\nimport styled from 'styled-components';\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HashTag = () => {\r\n    const [color, setColor] = useState(false); // 스타일 컴포넌트에 props로 전달할 state\r\n    return (\r\n        <>\r\n          <button\r\n            style={{\r\n              border: '1px solid blue',\r\n              backgroundColor: 'lightblue',\r\n              height: '40px',\r\n              width: '200px',\r\n              marginBottom: '50px',\r\n            }}\r\n            onClick={function () {\r\n              setColor(!color);\r\n            }}\r\n          >\r\n            색상 바꾸기\r\n          </button>\r\n          <Outer>\r\n            <TestComponent backColor={color} /> // 색상상자 컴포넌트에 backColor라는 props 만들어, 여기에 color state 넣어 전달\r\n          </Outer>\r\n        </>\r\n      );\r\n    }\r\n\r\n    const Outer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst TestComponent = styled.div`\r\n  height: 100px;\r\n  width: 100px;\r\n  background-color: ${props => (props.backColor ? 'blue' : 'red')};\r\n`; // 삼항연산자를 사용해 backColor의 값에 따라 blue / red 결정\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n\r\n//     <div className=\"container\">\r\n//     {data.map((item, idx) => {\r\n//       return (\r\n//         <>\r\n//           <button\r\n//             value={idx}\r\n//             className={\"hashtag\" + (idx == btnActive ? \" active\" : \"\")}\r\n//             onClick={toggleActive}\r\n//           >\r\n//             {item - 1}\r\n//           </button>\r\n//         </>\r\n//       );\r\n//     })}\r\n//   </div>\r\n//   );\r\n// }\r\n\r\nexport default HashTag;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA;AAAA;AAAA;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3C,oBACI;IAAA,wBACE;MACE,KAAK,EAAE;QACLK,MAAM,EAAE,gBAAgB;QACxBC,eAAe,EAAE,WAAW;QAC5BC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,OAAO;QACdC,YAAY,EAAE;MAChB,CAAE;MACF,OAAO,EAAE,YAAY;QACnBL,QAAQ,CAAC,CAACD,KAAK,CAAC;MAClB,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,KAAK;MAAA,wBACJ,QAAC,aAAa;QAAC,SAAS,EAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,wKACrC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA,gBACP;AAEP,CAAC;AAAA,GAvBCD,OAAO;AAAA,KAAPA,OAAO;AAyBT,MAAMQ,KAAK,GAAGT,MAAM,CAACU,GAAI;AAC7B;AACA;AACA,CAAC;AAAC,MAHQD,KAAK;AAKf,MAAME,aAAa,GAAGX,MAAM,CAACU,GAAI;AACjC;AACA;AACA,sBAAsBE,KAAK,IAAKA,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,KAAO;AAClE,CAAC,CAAC,CAAC;;AAMH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,MA5BMF,aAAa;AA8BnB,eAAeV,OAAO;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}